<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Localidad extends \App\Entity\Localidad implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'nombre', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'codigo_postal', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'provincia', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'institucion', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'persona', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'instituto', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'region'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'nombre', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'codigo_postal', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'provincia', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'institucion', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'persona', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'instituto', '' . "\0" . 'App\\Entity\\Localidad' . "\0" . 'region'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Localidad $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', []);

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre(string $nombre): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', [$nombre]);

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodigoPostal(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodigoPostal', []);

        return parent::getCodigoPostal();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodigoPostal(?string $codigo_postal): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodigoPostal', [$codigo_postal]);

        return parent::setCodigoPostal($codigo_postal);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvincia(): ?\App\Entity\Provincia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvincia', []);

        return parent::getProvincia();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvincia(?\App\Entity\Provincia $provincia): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvincia', [$provincia]);

        return parent::setProvincia($provincia);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstitucion(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstitucion', []);

        return parent::getInstitucion();
    }

    /**
     * {@inheritDoc}
     */
    public function addInstitucion(\App\Entity\Institucion $institucion): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInstitucion', [$institucion]);

        return parent::addInstitucion($institucion);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInstitucion(\App\Entity\Institucion $institucion): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInstitucion', [$institucion]);

        return parent::removeInstitucion($institucion);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersona(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersona', []);

        return parent::getPersona();
    }

    /**
     * {@inheritDoc}
     */
    public function addPersona(\App\Entity\Persona $persona): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPersona', [$persona]);

        return parent::addPersona($persona);
    }

    /**
     * {@inheritDoc}
     */
    public function removePersona(\App\Entity\Persona $persona): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePersona', [$persona]);

        return parent::removePersona($persona);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstituto(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstituto', []);

        return parent::getInstituto();
    }

    /**
     * {@inheritDoc}
     */
    public function addInstituto(\App\Entity\Instituto $instituto): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInstituto', [$instituto]);

        return parent::addInstituto($instituto);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInstituto(\App\Entity\Instituto $instituto): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInstituto', [$instituto]);

        return parent::removeInstituto($instituto);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion(): ?\App\Entity\Region
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', []);

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion(?\App\Entity\Region $region): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', [$region]);

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
